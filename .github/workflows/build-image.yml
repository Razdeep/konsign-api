# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        uses: docker/login-action@v1.10.0
        with:
          # Username used to log against the Docker registry
          username: razdeep
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      - run: docker build -t razdeep/konsign-api:${{ github.ref_name }}.${{ github.sha }} .
      - run: docker push razdeep/konsign-api:${{ github.ref_name }}.${{ github.sha }}

      - name: Build, Push and Release a Docker container to Heroku.
        # uses: gonuit/heroku-docker-deploy@9ab97585f979857642d66612a2ae4062b3347d53
        # This action rebuild the docker image again (though it is built earlier once) and pushes to heroku
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          heroku_app_name: konsign-api
          email: rrajdeeproychowdhury@gmail.com
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}